 1) Create VPC
resource "aws_vpc" "A" {
  cidr_block = "10.0.0.0/16"

  tags = {
    name = "Codewithmuh22"
  }
}


# 2) Create Internet Gateway
resource "aws_internet_gateway" "GW_Codewithmuh" {
  vpc_id = aws_vpc.A.id

  tags = {
    Name = "IG_Codewithmuh"
  }
}


# 3) Create Route Table
resource "aws_route_table" "RT_Codewithmuh" {
  vpc_id = aws_vpc.A.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.GW_Codewithmuh.id
  }

  route {
    ipv6_cidr_block = "::/0"
    gateway_id = aws_internet_gateway.GW_Codewithmuh.id
  }

  tags = {
    Name = "RT_Codewithmuh"
  }
}


# 4) Create Subnet
resource "aws_subnet" "Subnet_Codewithmuh" {
  vpc_id     = aws_vpc.A.id
  cidr_block = "10.0.0.0/24"
  availability_zone = "eu-west-2a"
  depends_on = [aws_internet_gateway.GW_Codewithmuh]

  tags = {
    Name = "Subnet_Codewithmuh"
  }
}



# 5) Associate Subnet with Route Table
resource "aws_route_table_association" "RT_to_Subnet" {
  subnet_id      = aws_subnet.Subnet_Codewithmuh.id
  route_table_id = aws_route_table.RT_Codewithmuh.id
}



# 6) Create Security Group to allow ports: 22, 80, 443
resource "aws_security_group" "SG_Codewithmuh" {
  name        = "SG_Codewithmuh"
  description = "Allow SSH, HTTP, HTTPS inbound traffic"
  vpc_id      = aws_vpc.A.id

  ingress {
    description = "HTTPS from VPC"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
ingress {
    description = "HTTP from VPC"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    description = "SSH from VPC"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "SG_Codewithmuh"
  }
}


# 7) Assign ENI with IP
resource "aws_network_interface" "ENI_A" {
subnet_id = aws_subnet.Subnet_Codewithmuh.id
private_ips = ["10.0.0.10"]
security_groups = [aws_security_group.SG_Codewithmuh.id]
}



# 8) Assign Elastic IP to ENI
resource "aws_eip" "EIP_A" {
  vpc                       = true
  network_interface         = aws_network_interface.ENI_A.id
  associate_with_private_ip = "10.0.0.10"
  depends_on                = [aws_internet_gateway.GW_Codewithmuh, aws_instance.Instance_A]

  tags = {
    Name = "EIP_A"
  }
}



